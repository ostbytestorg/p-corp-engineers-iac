name: Configure AKS Cluster

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      argo_admin_group_id:
        description: "Argo Admin Group name (this group will be granted admin access in ArgoCD)"
        required: true
        default: "grp-aks-admin"

jobs:
  configure-kube:
    runs-on:
      group: vnet-spoke-production-engineers
    environment: Production-plan
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login (Federated credentials)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.CLIENTID }}
          tenant-id: ${{ vars.TENANTID }}
          allow-no-subscriptions: true

      - name: Set AKS Context
        uses: azure/aks-set-context@v4
        with:
          cluster-name: aksostbyengineeering001
          resource-group: rg-tf-aks

      - name: Install kubelogin
        run: |
          echo "Downloading kubelogin..."
          curl -L -o kubelogin.zip https://github.com/Azure/kubelogin/releases/download/v0.2.7/kubelogin-linux-amd64.zip
          unzip kubelogin.zip
          chmod +x bin/linux_amd64/kubelogin
          sudo mv bin/linux_amd64/kubelogin /usr/local/bin/kubelogin
          kubelogin --version

      - name: Convert kubeconfig for noninteractive login using azurecli mode
        run: |
          echo "Converting kubeconfig to noninteractive azurecli mode..."
          kubelogin convert-kubeconfig --login azurecli

      - name: Install ArgoCD
        run: |
          kubectl create namespace argocd || true
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: Wait for ArgoCD Server to be Ready
        run: |
          echo "Waiting for ArgoCD pods to be ready..."
          kubectl -n argocd rollout status deploy/argocd-server --timeout=300s    
      - name: Configure ArgoCD repository access with GitHub App
        env:
          GITHUB_APP_ID: ${{ secrets.OSTBYTESTORGARGOCDAPPID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.OSTBYTESTORGARGOCDINSTALLATIONID }}
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.OSTBYTESTORGARGOCDKEY }}
        run: |
            echo "Configuring ArgoCD repository access with GitHub App..."
            
            # First verify argocd-cm exists
            kubectl get configmap argocd-cm -n argocd
            
            # Create a secret containing GitHub App credentials
            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: Secret
            metadata:
              name: github-app-creds
              namespace: argocd
            type: Opaque
            stringData:
              githubAppID: "${GITHUB_APP_ID}"
              githubAppInstallationID: "${GITHUB_APP_INSTALLATION_ID}"
              githubAppPrivateKey: |
              $(echo '        $GITHUB_APP_PRIVATE_KEY' | sed 's/^\$GITHUB_APP_PRIVATE_KEY$/        ${GITHUB_APP_PRIVATE_KEY}/')
            EOF
            
            # Update the repository in argocd-cm ConfigMap (patch approach)
            kubectl patch configmap argocd-cm -n argocd --type=merge -p '{"data":{"repositories":"- url: https://github.com/ostbytestorg/p-corp-engineers-iac.git\n  type: git\n  githubAppID:\n    name: github-app-creds\n    key: githubAppID\n  githubAppInstallationID:\n    name: github-app-creds\n    key: githubAppInstallationID\n  githubAppPrivateKey:\n    name: github-app-creds\n    key: githubAppPrivateKey"}}'
            
            # Verify the ConfigMap was updated correctly
            echo "Verifying ConfigMap update:"
            kubectl get configmap argocd-cm -n argocd -o jsonpath='{.data.repositories}'
            
            # Restart the repo server to apply changes
            kubectl rollout restart deployment argocd-repo-server -n argocd
            
            # Wait for repo server to be ready
            kubectl rollout status deployment argocd-repo-server -n argocd --timeout=120s
            
            echo "ArgoCD repository access configured successfully"