name: Deploy AKS & ACR via Terraform

permissions:
  id-token: write
  contents: read

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths: 
        - "TF/AKS/**"
  push:
    branches: [ main ]
    paths: 
        - "TF/AKS/**"

  workflow_dispatch:

jobs:
  azure-login:
    runs-on:
      group: vnet-spoke-production-engineers
    environment: Production-plan
    steps:
      - name: Azure Login (Federated credentials)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.CLIENTID }}
          tenant-id: ${{ vars.TENANTID }}
          enable-AzPSSession: true
          allow-no-subscriptions: true

  terraform:
    needs: azure-login
    uses: ostbytestorg/tf-buildtemplate/.github/workflows/tf-plan-apply.yml@main
    with:
      tfDirectory: "./TF/AKS"
      jobEnvironment: "Production-plan"
      tfStateKey: "aks.tfstate"

  configure-kube:
    needs: terraform
    # Only run this job when the event is a push to 'main' or on workflow dispatch
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}
    runs-on:
      group: vnet-spoke-production-engineers
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract kube_config and configure kubectl
        run: |
          cd TF/AKS
          terraform output -raw kube_config > kubeconfig.yaml
          echo "KUBECONFIG=$(pwd)/TF/AKS/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Validate Cluster Connectivity
        run: kubectl get nodes